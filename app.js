/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({

});


Ext.application({

    requires: [
        'Ext.MessageBox'
    ],
    models: [
        'WtmPankuModel',
        'TargetSelectModel',
        'MenuDataViewModel',
        'WAREHOUSEModel',
        'AbstractModel',
        'InventoryCheckModel',
        'PlannedFeedingModel'
    ],
    stores: [
        'WtmPankuStore',
        'TargetSelectStore',
        'MenuDataViewStore',
        'WAREHOUSEJsonStore',
        'WAREHOUSE_HALLJsonStore',
        'WAREHOUSE_HALL_ZONEJsonStore',
        'InventoryCheckStore',
        'abcStore',
        'MyDirectStore',
        'UnplannedWAREHOUSEJsonStore',
        'ProductionLineJsonStore',
        'PlanNumberJsonStore',
        'PlannedFeedingJsonStore',
        'UnplannedProductionLineJsonStore',
        'UnplannedFeedingJsonStore'
    ],
    views: [
        'LoginView',
        'MenuView',
        'MenuDataItem',
        'CutInboundView',
        'WtmDaoduoView',

        'RootCard',
        'TargetSelectDialog',
        'TargetChangeingView',
        'TestView',
        'EXWarehouseMaterial',
        'StoreCheck',
        'RealRight',
        'TagCheck',
        'RootNavigationView',
        'EXWarehouseProduct',
        'ServerSetting',
        'UnplannedFeeding',
        'FeedingDetail',
        'PlannedFeeding',
        'FeedingItem',
        'PLTCMPutawayView',
        'BackToLib',
        'ShipmentPreparation',
        'UnplanFeedingItem',
        'SimpleStoreCheck',
        'XS00List'
    ],
    name: 'SYSM',

    init : function() {
        Ext.override(Ext.data.Store, {
            initComponent : function() {
                var me = this;
                this.callParent(arguments);
            },
            listeners : {
                beforeload : function(store, operation, eOpts) {
                    store.getProxy().setTimeout(10000);
                }
            }
        });

        Ext.Ajax.on('requestexception', function(conn, response, options) {
            var contentType = response.getResponseHeader('Content-Type'),
                location = response.getResponseHeader('Location'),
                status = response.status;
            if (response.status == "999") {
                Ext.Msg.alert('提示信息', '用户会话已过期，请重新登陆！', function() {
                    var reRoot = Ext.create('SYSM.view.RootNavigationView');//
                    reRoot.push(Ext.create('SYSM.view.LoginView'));
                    // root.push(Ext.create('SYSM.view.TestView'));
                    // root.push(Ext.create('SYSM.view.MenuView'));
                    Ext.Viewport.add(reRoot);
                });
            }else if (response.timedout === true) {
                Ext.MessageBox.show({
                    title: '通信故障',
                    msg: '地址:[' + response.request.url + ']连接超时',
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.Msg.OK
                });

            } else {
                var msgJson = Ext.decode(response.responseText),
                    emptyMsg = '系统错误,请联系管理员',
                    msg;
                if (msgJson && msgJson.meta && msgJson.meta.message) {
                    msg = msgJson.meta.message;
                } else {
                    msg = emptyMsg;
                }
                Ext.MessageBox.show({
                    title: '请求出错',
                    msg: '地址:[' + response.request.url + ']<br>错误信息:' + msg,
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.Msg.OK
                });
            }


        });

    },

    launch: function() {
        //rootUrl = 'http://10.4.55.204:7001/mes-wtm-app';
        //rootUrl = 'http://192.168.0.112:8080/mes-wtm-app';
        // if (localStorage.url===undefined||
        //     localStorage.url===null||localStorage.url===''){
        //     rootUrl = 'http://192.168.0.109:8080/mes-wtm-app';
        // } else {
        //     rootUrl = localStorage.url;
        // }
        var url = localStorage.url;
        var port = localStorage.port;
        var serverName = localStorage.serverName;
        if (url===undefined ||
            url === null || url=== ''||
            port===undefined ||
            port === null || port=== ''||
            serverName===undefined ||
            serverName === null || serverName=== ''
           ) {
        //     localStorage.url = '192.168.0.109';
        //     localStorage.port = '8080';
            localStorage.url = 'cxapp.sgjtsteel.com';
            localStorage.port = '30011';
            localStorage.serverName = '';
        //     url = '192.168.0.109';
        //     port = '8080';
            url = 'cxapp.sgjtsteel.com';
            port = '30011';
            serverName = '';

        }
        // cxapp.sgjtsteel.com:30011
        rootUrl = 'http://cxapp.sgjtsteel.com:30011/';
        // rootUrl = 'http://10.88.248.40:9001/jtlg-app';
        console.log('rootUrl = '+rootUrl);
        //rootUrl = http://10.4.55.204:7001/mes-wtm-app

        // mainInit();

        root = Ext.create('SYSM.view.RootNavigationView');//
        root.push(Ext.create('SYSM.view.LoginView'));
        // root.push(Ext.create('SYSM.view.TestView'));
        // root.push(Ext.create('SYSM.view.MenuView'));
        Ext.Viewport.add(root);

    }

});
