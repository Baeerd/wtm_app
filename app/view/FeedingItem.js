/*
 * File: app/view/FeedingItem.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SYSM.view.FeedingItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.feedingItem',

    requires: [
        'Ext.Container',
        'Ext.Button'
    ],

    config: {
        layout: 'hbox',
        items: [
            {
                xtype: 'container',
                padding: '10 10',
                width: '100%',
                layout: {
                    type: 'hbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'container',
                        cls: 'light_blue_border',
                        width: '100%',
                        layout: {
                            type: 'hbox',
                            align: 'center',
                            pack: 'center'
                        },
                        items: [
                            {
                                xtype: 'container',
                                flex: 1,
                                layout: 'vbox',
                                items: [
                                    {
                                        xtype: 'container',
                                        layout: 'hbox',
                                        items: [
                                            {
                                                xtype: 'container',
                                                html: '计划号：'
                                            },
                                            {
                                                xtype: 'container',
                                                itemId: 'sequenceId'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        layout: 'hbox',
                                        items: [
                                            {
                                                xtype: 'container',
                                                html: '计划顺序号：'
                                            },
                                            {
                                                xtype: 'container',
                                                itemId: 'matSerial'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        layout: 'hbox',
                                        items: [
                                            {
                                                xtype: 'container',
                                                html: '钢卷号：'
                                            },
                                            {
                                                xtype: 'container',
                                                itemId: 'matId'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        layout: 'hbox',
                                        items: [
                                            {
                                                xtype: 'container',
                                                html: '垛位号：'
                                            },
                                            {
                                                xtype: 'container',
                                                itemId: 'slotId'
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'button',
                                height: 50,
                                itemId: 'doFeedingButton',
                                margin: '0 5',
                                width: 65,
                                text: '投料'
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMybutton8Tap',
                event: 'tap',
                delegate: '#doFeedingButton'
            }
        ]
    },

    onMybutton8Tap: function(button, e, eOpts) {
        var item = button.up('feedingItem');
        var currRecord = item.getRecord();
        Ext.Viewport.setMasked({
            xtype: 'loadmask',
            fullscreen:true,
            message: '正在投料，请稍候......'
        });

        var obj = {};
        obj.sid= currRecord.get('sid');
        obj.createdBy= currRecord.get('createdBy');
        obj.createdDt= currRecord.get('createdDt');
        obj.version= currRecord.get('version');
        obj.updatedBy= currRecord.get('updatedBy');
        obj.updatedDt= currRecord.get('updatedDt');
        obj.matId= currRecord.get('matId');
        obj.sequenceId= currRecord.get('sequenceId');
        obj.matSerial= currRecord.get('matSerial');
        obj.matWidth= currRecord.get('matWidth');
        obj.matThickness= currRecord.get('matThickness');
        obj.steelgradeId= currRecord.get('steelgradeId');
        obj.l4SteelgradeId= currRecord.get('l4SteelgradeId');
        obj.slotId= currRecord.get('slotId');
        obj.layer= currRecord.get('layer');
        obj.stateOut= currRecord.get('stateOut');
        obj.invlayer= currRecord.get('invlayer');
        obj.eqptId= currRecord.get('eqptId');
        obj.psSid= currRecord.get('psSid');
        obj.matSid= currRecord.get('matSid');

        var str = Ext.encode(obj);
        console.log(str);

        if (Ext.os.is('Android')) {
            Ext.Ajax.request({
                url:rootUrl+'/wtm/hand-throw-mat/throwMatSelected.action',
                method:'POST',
                timeout:5000,
                params: {
                    'detailList' : str
                },
                success: function(conn, response, options, eOpts) {
                    console.log('success');
                    var text = conn.responseText;
                    var obj = Ext.decode(text);
                    console.log('conn = ',conn.responseText);
                    if (obj.success) {
                        //提交后的动作
                        var feedingDataView = button.up('#feedingDataView');
                        feedingDataView.getStore().load();
                    }
                    // window.plugins.toast.show(obj.meta.message, 'long', 'center',
                    //                           function(a){console.log('toast success: ' + a);},
                    //                           function(b){console.log('toast error: ' + b);});
                    notice(obj.meta.message,null,'提示','确定');
                    Ext.Viewport.setMasked(false);

                },
                failure: function(conn, response, options, eOpts) {
                    // window.plugins.toast.show('连接异常！', 'long', 'center',
                    //                           function(a){console.log('toast success: ' + a);},
                    //                           function(b){console.log('toast error: ' + b);});
                    notice('连接异常！',null,'错误','确定');
                    Ext.Viewport.setMasked(false);

                }
            });
        } else {
            Ext.Ajax.request({
                url:rootUrl+'/wtm/hand-throw-mat/throwMatSelected.action',
                method:'POST',
                timeout:5000,
                params: {
                    'detailList' : str
                },
                success: function(conn, response, options, eOpts) {
                    console.log('success');
                    var text = conn.responseText;
                    var obj = Ext.decode(text);
                    console.log('conn = ',conn.responseText);
                    if (obj.success) {
                        //提交后的动作
                        var feedingDataView = button.up('#feedingDataView');
                        feedingDataView.getStore().load();
                    }
                    Ext.Msg.alert('消息',obj.message,Ext.emptyFn);
                    Ext.Viewport.setMasked(false);

                },
                failure: function(conn, response, options, eOpts) {
                    Ext.Msg.alert('错误','连接异常！',Ext.emptyFn);
                    Ext.Viewport.setMasked(false);

                }
            });
        }

    },

    updateRecord: function(record) {
        // console.log('updaterecord');
        var me = this;
        if (record===null){

        }else {
            me.down('#sequenceId').setHtml(record.get('sequenceId'));
            me.down('#matSerial').setHtml(record.get('matSerial'));
            me.down('#matId').setHtml(record.get('matId'));
            me.down('#slotId').setHtml(record.get('slotId'));
            if ('MAT_FEEDING'===record.get('inventoryStatus')) {
                me.down('#doFeedingButton').disable();
                me.down('#doFeedingButton').setHtml('已投');
            } else {
                me.down('#doFeedingButton').enable();
                me.down('#doFeedingButton').setHtml('投料');
            }
        }

    }

});